TP 6 : Documentation

Description de l’application :

L’application s’utilise dans un terminal et permet de garder une liste des machines existantes dans
l’entreprise et des applications présentes sur ces machines. Celle-ci propose des choix pour effectuer
différentes actions autours des machines et des applications. Les données sont enregistrées dans une
base SQL contenant deux tableaux : Machines et Disques. De plus l’application permet de sauvegarder
vos données et vos bases de données. 

Utilisation du build.gradle :

Pour utiliser l'application il vous suffit de faire un git clone du Git HUB dans le dossier voulu et aller dans le TP6_ansible_deploiement :
git clone https://github.com/JeanHuret/FormationPOEI.git

- Placez-vous dans le dossier TP6_ansible_deploiement : cd TP6_ansible_deploiement
- Lancez le build de l'image de jenkins : docker build -t my_jenkins .
- Lancez les container jenkins et ansible : docker-compose up -d 
                                                   
Utilisation de Jenkins :

- Sur une page web allez à l'adresse  http://localhost:8098
- Lancez le container jenkins : docker container ls
                                docker exec -it <id du containeur> bash
                                cat /var/jenkins_home/secrets/initialAdminPassword
- Copiez le code affiché dans Jenkins 
- Configurez les plugins (vous pouvez laisser les plugins recommandés)
- Configurez votre compte admin

- Allez dans 'Manage Jenkins' 
- Allez dans 'Manage plugins' puis cliquez sur 'Available', tapez 'plot', cochez la case puis cliquez sur 'install without restart'
- Allez dans 'Manage plugins' puis cliquez sur 'Available', tapez 'Ansible', cochez la case puis cliquez sur 'install without restart'
- Allez dans 'Global Tool Configuration' puis cliquez sur 'add gradle', ajoutez le nom 'gradle' ensuite cliquez sur 'save'
- Allez dans 'Global Tool Configuration' puis cliquez sur 'add ansible', ajoutez le nom 'ansible' ensuite cliquez sur 'save'

Création du job : 

- Retournez dans le dashboard
- Cliquez sur New item 
- Choisissez le nom du job et cliquez sur 'pipeline' puis 'Ok'
- Cliquez sur 'Definition' dans la session pipeline et choisissez 'Pipeline script from SCM'
- Choisissez 'GIT' dans le menu déroulant 'SCM'
- Entrez 'https://github.com/JeanHuret/FormationPOEI.git' dans le 'repository URL' 
- Entrez 'TP6_ansible_deploiement/Jenkinsfile' dans le 'Script Path'
- Cliquez sur 'save'
- Lancez le build en cliquant sur 'Build Now'

ansible playbook :
- se connecter à master01 avec la commande  docker exec -i -t master01 'sh'
- faire un eval "$(ssh-agent -s)" puis ssh-add /root/.ssh/id_rsa 
- copier la clef public sur les hôtes distants avec la commande ssh-copy-id root@<IPmachinehost> avec les ip récupérées précédemment.
- se connecter à chaque hôte avec la commande ssh root@<IPmachinehost> afin d'activer la clef. Une fois la clef activée vous pouvez vous connecter directement.
- créer un dossier ansible dans /etc et un fichier host dans ce dossier ansible il devrait être comme le hosts du dépôt avec des ip différentes auparavant récupérées.
- lancer le playbook avec la commande ansible-playbook le nomdufichier.yaml
En cas d' échec, une erreur apparaîtra.

docker-compose :
- pour lancer les conteneur utilisé le docker-compose avec la commande suivante docker-compose up -d.
- pour vérifier docker-compose ps qui permet de voir si le containers sont up et les lien créer "port"
- en cas d'échec faire un docker-compose log pour plus de détail sur erreur.
- pour relancer un compose proprement faire docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q) && docker system prune -a --volumes qui videra le cache afin de repartir sur une installation vierge.
- enfin faire un docker inspect --format='{{.Name}} ansible_host={{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq) qui nous permet avoir les ip qui nous servirons par la suite.

main.yaml
nous permet d'avoir les variables environnement des bases de données

Le bilan du Tp6 est mitigé car nous n'avons pas réussi à le terminer et des points automatisations ne sont pas réglés. le playbook centos n'a pas été fait, le problème du local host pour le playbook génère des erreurs sur les parties commentées.
Il nous a permis quand même de mieux comprendre les conceptions et la manière d'automatiser les différentes étapes


